import java.util.ArrayList;
import java.util.Scanner;
import java.util.Random;

public class Password {
    char[] needCase;
    int description;

    public Password(char[] needCase, int description) {
        this.needCase = needCase;
        this.description = description;
    }

    public void Logic() {
        Scanner pp = new Scanner(System.in);
        System.out.println("What is the password for:");
        String purpose = pp.next();

        System.out.print("Enter the password length: ");
        int length = pp.nextInt();

        System.out.println("Available characters:");
        for (char letter : needCase) {
            System.out.print(letter + " ");
        }
        System.out.println();

        ArrayList<Character> password = new ArrayList<>();
        for (int i = 1; i <= length; i++) {
            System.out.print("Enter character #" + i + " of the password: ");
            char chosenLetter = pp.next().charAt(0);

            int randomIndex = (int) (Math.random() * (password.size() + 1));
            password.add(randomIndex, chosenLetter);
        }

        System.out.println("Your password: " + password + " for " + purpose);
    }

    public void Status() {
        System.out.println(
            "This is a password strength check. " +
            "Please enter the number corresponding to the type of password you selected:"
        );
        Scanner ee = new Scanner(System.in);
        description = ee.nextInt();
        int length;

        switch (description) {
            case 1:
                System.out.println(
                    "Any password made up of digits only cannot be secure, regardless of length."
                );
                break;
            case 2:
            case 3:
            case 4:
            case 5:
                System.out.print("Please enter the password length: ");
                length = ee.nextInt();
                if (length < 5) {
                    System.out.println("You should probably change it.");
                } else if (length < 10) {
                    System.out.println("Acceptable password.");
                } else {
                    System.out.println("Excellent password.");
                }
                break;
            default:
                System.out.println("Invalid selection.");
        }
    }

    public void AutoAim() {
        Random random = new Random();
        Scanner pp = new Scanner(System.in);

        System.out.println("What is the password for:");
        String purpose = pp.next();

        System.out.print("Enter the password length: ");
        int length = pp.nextInt();

        System.out.println("Available characters:");
        for (char letter : needCase) {
            System.out.print(letter + " ");
        }
        System.out.println();

        ArrayList<Character> password = new ArrayList<>();
        for (int i = 0; i < length; i++) {
            // Randomly select a character from the 'needCase' array
            char randomChar = needCase[random.nextInt(needCase.length)];
            password.add(randomChar);
        }

        System.out.println("Your password: " + password + " for " + purpose);
    }
}

class Default extends Password {
    public Default(char[] needCase, int description) {
        super("1234567890".toCharArray(), 1);
    }

    @Override
    public void Logic() {
        super.Logic();
    }

    @Override
    public void Status() {
        super.Status();
    }

    @Override
    public void AutoAim() {
        super.AutoAim();
    }
}

class BigAlphabet extends Password {
    public BigAlphabet(char[] needCase, int description) {
        super("1234567890QWERTYUIOPASDFGHJKLZXCVBNM".toCharArray(), 3);
    }

    @Override
    public void Logic() {
        super.Logic();
    }

    @Override
    public void Status() {
        super.Status();
    }

    @Override
    public void AutoAim() {
        super.AutoAim();
    }
}

class Symbol extends Password {
    public Symbol(char[] needCase, int description) {
        super("1234567890/*-+^&()@!#$?.,:;".toCharArray(), 4);
    }

    @Override
    public void Logic() {
        super.Logic();
    }

    @Override
    public void Status() {
        super.Status();
    }

    @Override
    public void AutoAim() {
        super.AutoAim();
    }
}

class Combat extends Password {
    public Combat(char[] needCase, int description) {
        super(
            "!@#$%&*()-+=_/|?qwertyuiopasdfghjklzxcvbnm" +
            "QWERTYUIOPASDFGHJKLZXCVBNM1234567890".toCharArray(),
            5
        );
    }

    @Override
    public void Logic() {
        super.Logic();
    }

    @Override
    public void Status() {
        super.Status();
    }

    @Override
    public void AutoAim() {
        super.AutoAim();
    }
}

class SmallWord extends Password {
    public SmallWord(char[] needCase, int description) {
        super("qwertyuiopasdfghjklzxcvbnm1234567890".toCharArray(), 2);
    }

    @Override
    public void Logic() {
        super.Logic();
    }

    @Override
    public void Status() {
        super.Status();
    }

    @Override
    public void AutoAim() {
        super.AutoAim();
    }
}
